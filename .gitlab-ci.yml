variables:
  CARGO_HOME: /cargo
  RUST_BACKTRACE: 1

stages:
  - pedantry
  - test
  - publish

default:
  before_script:
    - mkdir $CARGO_HOME && touch $CARGO_HOME/config
    - echo "[registries]" >> $CARGO_HOME/config &&
      echo "redpoll-crates = { index = \"https://dl.cloudsmith.io/${CLOUDSMITH_KEY}/redpoll/crates/cargo/index.git\" }" >> $CARGO_HOME/config

format:
  image: "rust:1.52.1"
  stage: pedantry
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

clippy:
  image: "rustlang/rust:nightly"
  stage: pedantry
  script:
    - rustup component add clippy
      sed -i 's/\!\[warn/\!\[deny/' src/lib.rs  && \
      sed -i 's/\!\[warn/\!\[deny/' braid_cc/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_codebook/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_consts/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_data/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_flippers/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_geweke/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_metadata/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_stats/src/lib.rs && \
      sed -i 's/\!\[warn/\!\[deny/' braid_utils/src/lib.rs
    - cargo clippy

test:
  image: "rust:1.52.1"
  stage: test
  script:
    # Print version info for debugging
    - rustc --version && cargo --version
    - time cargo build
    # Get examples built before tests. The quality of inference is important =
    # for animals, but not for satellites. To save time, run satellites for a
    # short amount of time.
    - time ./target/debug/braid regen-examples --timeout 120 --examples animals
    - time ./target/debug/braid regen-examples --timeout 10 --examples satellites
    # test and code coverage. Set timeout to 240 because some of the inference
    # tests take a long time to run.
    - cargo test --all

# coverage:
#   stage: test
#   only:
#     - tags
#   except:
#     - branches
#   script:
#     # Print version info for debugging
#     - rustc --version && cargo --version
#     - time cargo build
#     # Get examples built before tests. The quality of inference is important =
#     # for animals, but not for satellites. To save time, run satellites for a
#     # short amount of time.
#     - time ./target/debug/braid regen-examples --timeout 5 --examples animals
#     - time ./target/debug/braid regen-examples --timeout 5 --examples satellites
#     - cargo install cargo-tarpaulin -f
#     # test and code coverage. Set timeout to 240 because some of the inference
#     # tests take a long time to run.
#     - cargo tarpaulin -v -t 240

publish:crates:
  stage: publish
  image: "rustlang/rust:nightly"
  only:
    - tags
  except:
    - branches
  script:
    - apt-get update
    - apt-get install -y python3 python3-pip
    - pip3 install --upgrade cloudsmith-cli
    - bash publish.sh

publish:image:
  stage: publish
  image: docker:19.03.1
  services:
  - docker:19.03.0-dind
  only:
    - tags
  except:
    - branches
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg CLOUDSMITH_KEY=$CLOUDSMITH_KEY -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
